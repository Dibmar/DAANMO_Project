DAANMO Project log

DAANMO is a EDA project centered around movies. The main goal of DAANMO is to analyze the Movies Dataframe (source: https://bit.ly/2Jc6BV2) in order to bring light into the data contained in it and draw the subsequent conclusions.
DAANMO consists of six (6) dataframes, which in turn contain more than 4500 different movies of various genres and release dates (up to 2017):
    - Credits: full cast and crew
    - Links and Links Small: original source of data and movie id
    - Keywords: genre related keywords for pitch
    - Ratings and Ratings small: ratings from original source, up to 5 stars.

The present document serves as a Project Log. Currently the project is archived in Kaggle due to filesize limits (https://www.kaggle.com/servandocontrario/notebooks)

25/03/2020
    + Actions taken
        - DAANMO Project Log created
        - Credits, Links (and Links Small), Ratings, and Movies Metadata csv files explored
            * Movies Metadata contains revenue information. Useful for calculating profitability
    + Random encounters
        - Credits
            * Need to convert lists contained in cells as df columns
        - Ratings
            * Need to convert timestamp into regular date object
        - Links and Links Small
            * NaN data encountered. SOLVED: Set to 0 as default for data conversion. 
        -Movies Metadata
            * NaN values encountered in IMDB Id column. Probably related to Links and Links Small problem. Identification of this titles (17/45000) may prove impossible
            * Various NaN values in all other columns except columns: adult, budget, genres, id and original title. THough worrying, none of these NaN values appear in large numbers in key columns.
            * Similar column issue as in -Credits- 

26/03/2020
    + Actions taken
        - Uploaded project to Kaggle, as the filesize far exeeced GitHub limits (https://www.kaggle.com/servandocontrario/notebooks).
    + Random encounters
        - All issues cited in 25/03/2020 are still being looked at and researched.

27/03/2020
    + Actions taken
        - Exploration of movie_metadata's columns:
            * budget
            * revenue 
            * popularity
        - Creation of a df (benefits) referent to movie_metadata. It shows the benefits achieved by the movie in question. It contains data about 17% (aprox) of the total sum of movies (see Random encounters)
        - Creation of a df (popularity_df) referent to movie_metadata. It shows the popularity coeficient. Currently in float format.
        - All kernels in Kaggle are now public
    + Random encounters
        - budget and revenue
            * Large number of NaN and 0 detected. As much as to render 82% of data available inoperable SOLVED 1/2
            * Also the budget column seems to be set as str/object by default instead of int or float SOLVED
        - popularity
            * popularity is filled with objects (strings and floats) that difficult the conversion into plottable integrers. SOLVED
        - All issues cited in 25/03/2020 are still being looked at and researched.

30/03/2020
    + Actions taken
        - The revenue column has been created in the benefits df (refering to budgets and revenue)
            * All benefits seem to be located in a specific interval. A number of clear outliers have been identified.
        - The columns of "languages" and "production countries" columns
            * Revealing a large predominance and importance of the english speaking market, specifically the US'
    + Random encounters
        - Kaggle and pyplots does not seem to work in the same way
        - All issues, except the ones cited aboved, are still being looked at and researched.

31/03/2020
    + Actions taken
        - The ratings and ratings_small.csv have been explored
            * The timestamp issue has been SOLVED
            * Graphs have been produced showing the distribution of the ratings of both files
            * Graphs pngs have been uploaded to GitHub
    + Random encounters
        - Kaggle does not display the graphs it produces.